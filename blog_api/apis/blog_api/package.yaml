AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: 'query-ap Sample SAM Template for query-api

  '
Parameters:
  Region:
    Type: String
    Default: us-west-2
  DynamoEndpoint:
    Type: String
    Default: cloud
    AllowedValues:
    - http://dynamo-local:8000
    - cloud
    Description: http://dynamo-local:8000, cloud
Globals:
  Function:
    Timeout: 3
Resources:
  ArticlesApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: Prod
      Name: ArticlesApi
      DefinitionUri: s3://dakobed-serverless-apis/7f0b5efbf4d287ecbbf369e3e2b28bdf
  ArticlesScanFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: ArticlesScanFunction
      CodeUri: s3://dakobed-serverless-apis/2956147654fc6f2e4f5fc7e1c0e4ae5c
      Handler: app.lambda_handler
      Runtime: python3.7
      Policies:
      - DynamoDBReadPolicy:
          TableName: Articles
      Events:
        ProductsQuery:
          Type: Api
          Properties:
            RestApiId:
              Ref: ArticlesApi
            Path: /articles
            Method: get
  PostArticleFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: PostArticleFunction
      CodeUri: s3://dakobed-serverless-apis/b3c51cbae0589d60e29548e71f15713b
      Handler: app.lambda_handler
      Runtime: python3.7
      Policies:
      - DynamoDBCrudPolicy:
          TableName: Articles
      Events:
        ProductsQuery:
          Type: Api
          Properties:
            RestApiId:
              Ref: ArticlesApi
            Path: /articles
            Method: put
  ArticleDetailFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: ArticleDetailFunction
      CodeUri: s3://dakobed-serverless-apis/efc1a37ac9c9e04a34cc029a91760ccb
      Handler: app.lambda_handler
      Runtime: python3.7
      Policies:
      - DynamoDBReadPolicy:
          TableName: Articles
      Events:
        ProductsQuery:
          Type: Api
          Properties:
            RestApiId:
              Ref: ArticlesApi
            Path: /articles/detail/{article_id}/{article_date}
            Method: get
  ArticleUpdateFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: ArticleUpdateFunction
      CodeUri: s3://dakobed-serverless-apis/630f4ab448439e551207c1552421e2d3
      Handler: app.lambda_handler
      Runtime: python3.7
      Policies:
      - DynamoDBReadPolicy:
          TableName: Articles
      Events:
        ProductsQuery:
          Type: Api
          Properties:
            RestApiId:
              Ref: ArticlesApi
            Path: /articles/detail/{article_id}/{article_date}
            Method: put
  DeleteArticleFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: DeleteArticleFunction
      CodeUri: s3://dakobed-serverless-apis/5cfd8c448b8fabd62d9e8be17cd6d690
      Handler: app.lambda_handler
      Runtime: python3.7
      Policies:
      - DynamoDBCrudPolicy:
          TableName: Articles
      Events:
        DeleteArticle:
          Type: Api
          Properties:
            RestApiId:
              Ref: ArticlesApi
            Path: /articles/detail/{article_id}/{article_date}
            Method: delete
  BlogCommentsFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: BlogCommentsFunction
      CodeUri: s3://dakobed-serverless-apis/a422de01bbea84ab1658be03f51c6ea2
      Handler: app.lambda_handler
      Runtime: python3.7
      Environment:
        Variables:
          dynamo_endpoint:
            Ref: DynamoEndpoint
          region:
            Ref: Region
      Policies:
      - DynamoDBReadPolicy:
          TableName: Comments
      Events:
        VendorQuery:
          Type: Api
          Properties:
            RestApiId:
              Ref: ArticlesApi
            Path: /blog/comments/{article_id}
            Method: get
Outputs:
  ArticlesApi:
    Value:
      Fn::Sub: https://${ArticlesApi}.execute-api.${AWS::Region}.amazonaws.com/Prod
    Export:
      Name:
        Fn::Join:
        - ':'
        - - Ref: AWS::StackName
          - ArticlesApi

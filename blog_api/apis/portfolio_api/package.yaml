AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: 'query-ap Sample SAM Template for query-api

  '
Parameters:
  DynamoEndpoint:
    Type: String
    Default: cloud
    AllowedValues:
    - http://dynamo-local:8000
    - cloud
    Description: http://dynamo-local:8000, cloud
Globals:
  Function:
    Timeout: 3
Resources:
  PortfolioApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: Prod
      Name: PortfolioApi
      DefinitionUri: s3://dakobed-serverless-apis/96f268095096eb14e7cb0672cbe8485c
  PortfolioDetailFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: PortfolioDetailFunction
      CodeUri: s3://dakobed-serverless-apis/dc71217f405b3b71ccdbcdbcb1e71e32
      Handler: app.lambda_handler
      Runtime: python3.7
      Policies:
      - DynamoDBReadPolicy:
          TableName: PortfolioArticles
      Events:
        ProductsQuery:
          Type: Api
          Properties:
            RestApiId:
              Ref: PortfolioApi
            Path: /portfolio/detail/{article_category}/{article_name}
            Method: get
  PostPortfolioFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: PostPortfolioFunction
      CodeUri: s3://dakobed-serverless-apis/e98c4082984960a9cb9bb22c9332f2f8
      Handler: app.lambda_handler
      Runtime: python3.7
      Policies:
      - DynamoDBCrudPolicy:
          TableName: PortfolioArticles
      Events:
        ProductsQuery:
          Type: Api
          Properties:
            RestApiId:
              Ref: PortfolioApi
            Path: /portfolio
            Method: put
Outputs:
  PortfolioApi:
    Value:
      Fn::Sub: https://${PortfolioApi}.execute-api.${AWS::Region}.amazonaws.com/Prod
    Export:
      Name:
        Fn::Join:
        - ':'
        - - Ref: AWS::StackName
          - PortfolioApi
